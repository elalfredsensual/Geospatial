LC_crop <- crop(x = LC, y = ext, snap="out")
# visualizamos
plotRGB(LC_crop, r = 4, g = 3, b = 2, stretch = "lin")
# Infrarojo (5,4,3)
plotRGB(LC, r = 5, g = 4, b = 3, stretch = "lin")
# Agricultura (6,5,2)
plotRGB(LC, r = 6, g = 5, b = 2, stretch = "lin")
# Penetración de la Radiación en la Atmósfera (7,6,5)
plotRGB(LC, r = 7, g = 6, b = 5, stretch = "lin")
# Uso del Suelo / Masas de Agua (5,6,4)
plotRGB(LC, r = 5, g = 6, b = 4, stretch = "lin")
# Infrarojo de Onda Corta (7,5,4)
plotRGB(LC, r = 7, g = 5, b = 4, stretch = "lin")
# Análisis de Vegetación (6,5,4)
plotRGB(LC, r = 6, g = 5, b = 4, stretch = "lin")
# Análisis de Vegetación Sana (5,6,2)
plotRGB(LC, r = 5, g = 6, b = 2, stretch = "lin")
# indice normalizado de vegetacion
ndvi <- (LC[[5]] - LC[[4]]) / (LC[[4]] + LC[[5]])
# dibujamos el nvdi
plot(ndvi , main = "NDVI Las Condes")
# indice normalizado de vegetacion
ndvi <- (LC[[5]])
# dibujamos el nvdi
plot(ndvi , main = "NDVI Las Condes")
# indice normalizado de vegetacion
ndvi <- (LC[[5]]/max(LC[[5]]))
max(LC[[5]])
# indice normalizado de vegetacion
ndvi <- scale(LC[[5]])
# dibujamos el nvdi
plot(ndvi , main = "NDVI Las Condes")
# indice normalizado de vegetacion
infrared <- scale(LC[[5]])
# dibujamos el nvdi
plot(infrared , main = "Infrarojo Las Condes")
# extraemos zonas con ndvi alto
vegetacion <- calc(infrared, fun = function(x) ifelse(x <= 3, NA, x))
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))( 200 )
plot(vegetacion , main = "NDVI Vegetación Alta", col = pal_green)
## agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry, add = T, )
# indice normalizado de vegetacion
infrared <- scale(LC[[5]])
cccccccccccccccc' scale'
? scale
# extraemos zonas con infrarojo alto, que aproximan a la vegetacion
vegetacion <- calc(infrared, fun = function(x) ifelse(x <= 3, NA, x))
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))( 200 )
plot(vegetacion , main = "NDVI Vegetación Alta", col = pal_green)
plot(vegetacion , col = pal_green)
# dibujamos el infrarojo
plot(infrared)
# extraemos zonas con infrarojo alto, que aproximan a la vegetacion
vegetacion <- calc(infrared, fun = function(x) ifelse(x <= 3, NA, x))
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))( 200 )
plot(vegetacion , col = pal_green)
## agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry, add = T, )
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(vegetacion, na.color = "transparent", col.regions=pal_green)
mview
prueba <- rasterToPolygons(vegetacion, digits = 16)
plot(prueba)
(u <- st_union(prueba))
library(sf)
(u <- st_union(prueba))
st_as_sf(prueba)
st_as_sf(prueba) %>% st_union()
st_as_sf(prueba) %>% st_union() %>% plot()
prueba %>% st_as_sf() %>% st_union() %>% plot()
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16)
plot(poligonos_infrarojo, col = poligonos_infrarojo$layer)
plot(poligonos_infrarojo, col = pal_green)
poligonos_infrarojo <- poligonos_infrarojo %>% st_as_sf() %>% st_union()
plot(poligonos_infrarojo, col = pal_green)
pacman::p_load(raster, mapview, sf)
plot(LasCondes$geometry, add = T, )
plot(LasCondes$geometry)
plot(poligonos_infrarojo, col = pal_green, , add = T)
plot(poligonos_infrarojo, col = pal_green, add = T)
plot(LasCondes$geometry, add = T, )
plot(vegetacion , col = pal_green)
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16)
plot(poligonos_infrarojo, col = pal_green)
# unimos pixeles que estan contiguos
poligonos_infrarojo <- poligonos_infrarojo %>% st_as_sf() %>% st_union()
## agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(poligonos_infrarojo, col = pal_green, add = T)
plot(poligonos_infrarojo, col = pal_green)
## agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(poligonos_infrarojo, col = pal_green, add = TRUE)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(vegetacion, na.color = "transparent", col.regions=pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(poligonos_infrarojo, na.color = "transparent", col.regions=pal_green)
mview
? mapview
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(poligonos_infrarojo, na.color = "transparent", col=pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(poligonos_infrarojo, na.color = "transparent", color =pal_green)
mview
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(poligonos_infrarojo, na.color = "transparent", col.regions =pal_green)
mview
poligonos_infrarojo
View(poligonos_infrarojo)
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16)
plot(poligonos_infrarojo, col = pal_green)
View(poligonos_infrarojo)
? st_union
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16)
plot(poligonos_infrarojo, col = pal_green)
# unimos pixeles que estan contiguos
poligonos_infrarojo <- poligonos_infrarojo %>% st_as_sf() %>% st_combine()
plot(poligonos_infrarojo, col = pal_green)
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16)
plot(poligonos_infrarojo, col = pal_green)
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16) %>% st_as_sf()
plot(poligonos_infrarojo, col = pal_green)
plot(poligonos_infrarojo, pal = pal_green)
plot(poligonos_infrarojo)
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))
plot(vegetacion , col = pal_green)
plot(vegetacion , col = pal_green(200))
plot(vegetacion , col = pal_green(200))
plot(poligonos_infrarojo)
plot(vegetacion , col = pal_green(200))
plot(poligonos_infrarojo)
plot(vegetacion , col = pal_green( 200 ))
plot(poligonos_infrarojo)
plot(poligonos_infrarojo, pal = pal_green
)
plot(vegetacion , col = pal_green( 200 ))
plot(vegetacion , col = pal_green( 200 ))
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16) %>% st_as_sf()
plot(poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union()
plot(multi_poligonos_infrarojo, pal = pal_green)
plot(multi_poligonos_infrarojo, col = pal_green)
plot(multi_poligonos_infrarojo, pal = pal_green)
multi_poligonos_infrarojo <- poligonos_infrarojo %>%
summarise(geometry = st_union(geometry))
# st_union solo junta las geometrias, para unir los valores hay que ir un paso mas alla
library(tidyverse)
multi_poligonos_infrarojo <- poligonos_infrarojo %>%
summarise(geometry = st_union(geometry))
plot(multi_poligonos_infrarojo, pal = pal_green)
multi_poligonos_infrarojo <- poligonos_infrarojo %>%
summarise(geometry = st_union(geometry),
layer = mean(layer))
plot(multi_poligonos_infrarojo, pal = pal_green)
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_combine()
length(multi_poligonos_infrarojo)
length(multi_poligonos_infrarojo[[1]])
length(multi_poligonos_infrarojo[[1]])
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union()
length(multi_poligonos_infrarojo[[1]])
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16) %>% st_as_sf()
plot(poligonos_infrarojo, pal = pal_green)
poligonos_infrarojo$id <- 1:nrow(poligonos_infrarojo)
plot(poligonos_infrarojo, pal = pal_green)
plot(poligonos_infrarojo$layer, pal = pal_green)
plot(poligonos_infrarojo, pal = pal_green)
plot(poligonos_infrarojo[[layer]], pal = pal_green)
plot(poligonos_infrarojo[["layer"]], pal = pal_green)
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16) %>% st_as_sf()
plot(poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union()
plot(multi_poligonos_infrarojo, pal = pal_green)
multi_poligonos_infrarojo <-
multi_poligonos_infrarojo %>% mutate(
valueMean = raster_extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
)
raster_extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
? raster_extract
multi_poligonos_infrarojo <-
multi_poligonos_infrarojo %>% mutate(
valueMean = raster::extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
)
raster::extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
multi_poligonos_infrarojo
raster::extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union()
raster::extract(vegetacion$layer, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
raster::extract(vegetacion$layer, multi_poligonos_infrarojo[[1]], fun = mean, na.rm = TRUE)
raster::extract(vegetacion, multi_poligonos_infrarojo[[1]], fun = mean, na.rm = TRUE)
raster::extract(vegetacion, st_as_sf(multi_poligonos_infrarojo), fun = mean, na.rm = TRUE)
st_as_sf(multi_poligonos_infrarojo)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union() %>% st_as_sf()
plot(multi_poligonos_infrarojo, pal = pal_green)
raster::extract(vegetacion, multi_poligonos_infrarojo, fun = mean, na.rm = TRUE)
raster::extract(vegetacion, multi_poligonos_infrarojo)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union() %>% st_as_sf()
plot(multi_poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union() %>% st_as_sf()
View(multi_poligonos_infrarojo)
multi_poligonos_infrarojo$x
# veamos que pasa al unirlos
multi_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union()
multi_poligonos_infrarojo
multi_poligonos_infrarojo %>% st_cast()
multi_poligonos_infrarojo %>% st_cast("POLYGON")
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union() %>% st_cast("POLYGON")
plot(merged_poligonos_infrarojo, pal = pal_green)
plot(merged_poligonos_infrarojo, col = pal_green)
plot(merged_poligonos_infrarojo, pal = pal_green)
plot(merged_poligonos_infrarojo)
plot(merged_poligonos_infrarojo)
raster::extract(vegetacion, merged_poligonos_infrarojo)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>% st_union() %>% st_cast("POLYGON") %>% st_as_sf()
plot(merged_poligonos_infrarojo)
plot(merged_poligonos_infrarojo, pal = pal_green)
raster::extract(vegetacion, merged_poligonos_infrarojo)
raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
plot(merged_poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
plot(merged_poligonos_infrarojo, pal = pal_green)
# agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(merged_poligonos_infrarojo, col = pal_green, add = TRUE)
plot(merged_poligonos_infrarojo, pal = pal_green, add = TRUE)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")+
mapview(merged_poligonos_infrarojo, na.color = "transparent", col.regions =pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent")
? mapview
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo)
class(merged_poligonos_infrarojo)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo$layer, na.color = "transparent", col.regions = pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo$x, na.color = "transparent", col.regions = pal_green)
mview
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
plot(merged_poligonos_infrarojo, pal = pal_green)
merged_poligonos_infrarojo$x$layer<-1
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
merged_poligonos_infrarojo$x
merged_poligonos_infrarojo$x %>% mutate( layer = 1)
plot(merged_poligonos_infrarojo, pal = pal_green)
merged_poligonos_infrarojo$x
class(merged_poligonos_infrarojo)
merged_poligonos_infrarojo %>% drop_geometry()
merged_poligonos_infrarojo %>% st_drop_geometry()
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
merged_poligonos_infrarojo %>% st_drop_geometry()
merged_poligonos_infrarojo$geometry <- merged_poligonos_infrarojo$x
plot(merged_poligonos_infrarojo, pal = pal_green)
plot(merged_poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
plot(merged_poligonos_infrarojo, pal = pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo, na.color = "transparent", col.regions = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON")
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, st_as_sf(merged_poligonos_infrarojo), fun=mean)
plot(merged_poligonos_infrarojo, pal = pal_green)
plot(merged_poligonos_infrarojo, col = pal_green)
plot(merged_poligonos_infrarojo)
plot(merged_poligonos_infrarojo$``)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON")
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo, na.color = "transparent", col.regions = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
plot(merged_poligonos_infrarojo, pal = pal_green)
# agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(merged_poligonos_infrarojo, pal = pal_green, add = TRUE)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo, na.color = "transparent", col.regions = pal_green)
class(merged_poligonos_infrarojo)
? mapview
class(merged_poligonos_infrarojo$layer)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo$layer, na.color = "transparent", col.regions = pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo, na.color = "transparent", col.regions = pal_green)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(merged_poligonos_infrarojo$x, na.color = "transparent", col.regions = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
sf_to_df()  # lo dejamos como objeto sf
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_to_df()  # lo dejamos como objeto sf
pacman::p_load(raster, mapview, sf, sfheaders)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_to_df()  # lo dejamos como objeto sf
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
sf_to_df()  # lo dejamos como objeto sf
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
# extraemos los valores del raster original sobre el
merged_poligonos_infrarojo$layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
merged_poligonos_infrarojo %>% sf_to_df()
aa <- merged_poligonos_infrarojo %>% sf_to_df()
View(aa)
# extraemos los valores del raster original sobre el
layer <- raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean)
# extraemos los valores del raster original sobre el
layer <- data.frame(vegetacion = raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean))
# extraemos los valores del raster original sobre el
vegetacion_poly <- data.frame(vegetacion = raster::extract(vegetacion, merged_poligonos_infrarojo, fun=mean))
st_geometry(vegetacion_poly) <- merged_poligonos_infrarojo
st_geometry(merged_poligonos_infrarojo)
st_geometry(vegetacion_poly) <- st_sfc(merged_poligonos_infrarojo)
st_sfc(merged_poligonos_infrarojo)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON") %>% # aislamos los poligonos resultantes
st_as_sf()  # lo dejamos como objeto sf
st_sfc(merged_poligonos_infrarojo)
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON")
st_geometry(vegetacion_poly) <- st_sfc(merged_poligonos_infrarojo)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON")  # aislamos los poligonos resultantes
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre el
vegetacion_poly <- data.frame(vegetacion = raster::extract(vegetacion,
st_as_sf(merged_poligonos_infrarojo),
fun=mean))
st_geometry(vegetacion_poly) <- st_sfc(merged_poligonos_infrarojo)
plot(vegetacion_poly, pal = pal_green)
# agregar los polígonos de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(vegetacion_poly, pal = pal_green, add = TRUE)
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(vegetacion_poly, na.color = "transparent", col.regions = pal_green)
mview
# agregar la frontera de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(vegetacion_poly, pal = pal_green, add = TRUE)
# visualizamos en mapa interactivo
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(vegetacion_poly, na.color = "transparent", col.regions = pal_green)
mview
pacman::p_load(raster, mapview, sf, sfheaders)
pacman::p_load(raster, mapview, sf)
# Cargamos imagen satelital de las condes ----
LC <- brick("data/OLI_LC.tif")
LC
# asigno nombres a las bandas
names(LC) <- c("aerosol","blue", "green", "red", "nir", "swir1", "swir2", "tir1" )
### utm utilizado a nivel regional (depende de la zona y hemisferio)
crs_utm <- "+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0"
# Reproyección de Imagen
LC_ll <- projectRaster(LC, crs = crs_utm)
# Color Natural
plotRGB(LC_ll, r = 4, g = 3, b = 2)
# Color Natural con contraste lineal
plotRGB(LC_ll, r = 4, g = 3, b = 2, stretch = "lin")
# Color Natural con contraste de quiebres naturales
plotRGB(LC_ll, r = 4, g = 3, b = 2, stretch = "hist")
# definimos fronteras (extent)
ext <- extent(c(350638, 358235,  6299157, 6304228))
# recortamos
LC_crop <- crop(x = LC, y = ext, snap="out")
# visualizamos
plotRGB(LC_crop, r = 4, g = 3, b = 2, stretch = "lin")
# Infrarojo (5,4,3)
plotRGB(LC, r = 5, g = 4, b = 3, stretch = "lin")
# Agricultura (6,5,2)
plotRGB(LC, r = 6, g = 5, b = 2, stretch = "lin")
# Penetración de la Radiación en la Atmósfera (7,6,5)
plotRGB(LC, r = 7, g = 6, b = 5, stretch = "lin")
# Uso del Suelo / Masas de Agua (5,6,4)
plotRGB(LC, r = 5, g = 6, b = 4, stretch = "lin")
# Infrarojo de Onda Corta (7,5,4)
plotRGB(LC, r = 7, g = 5, b = 4, stretch = "lin")
# Análisis de Vegetación (6,5,4)
plotRGB(LC, r = 6, g = 5, b = 4, stretch = "lin")
# Análisis de Vegetación Sana (5,6,2)
plotRGB(LC, r = 5, g = 6, b = 2, stretch = "lin")
# normalizamos los valores del canal 5 (x-mean)/sd
infrared <- scale(LC[[5]])
# dibujamos el infrarojo
plot(infrared)
# extraemos zonas con infrarojo alto, que aproximan a la vegetacion
vegetacion <- calc(infrared, fun = function(x) ifelse(x <= 3, NA, x))
pal_green <- colorRampPalette(c("green","springgreen4", "darkgreen"))
plot(vegetacion , col = pal_green( 200 ))
# pasamos pixeles a poligonos
poligonos_infrarojo <- rasterToPolygons(vegetacion, digits = 16) %>% st_as_sf()
plot(poligonos_infrarojo, pal = pal_green)
# veamos que pasa al unirlos
merged_poligonos_infrarojo <- poligonos_infrarojo  %>%
st_union() %>% # unimos vecinos
st_cast("POLYGON")  # aislamos los poligonos resultantes
plot(merged_poligonos_infrarojo, pal = pal_green)
# extraemos los valores del raster original sobre cada poligono resultante y lo guardamos en un df
vegetacion_poly <- data.frame(vegetacion = raster::extract(vegetacion,
st_as_sf(merged_poligonos_infrarojo),
fun=mean))
# le asignamos al df las geometrias de los poligonos
st_geometry(vegetacion_poly) <- st_sfc(merged_poligonos_infrarojo)
# visualizamos
plot(vegetacion_poly, pal = pal_green)
# agregar la frontera de Las Condes
LasCondes <- sf::st_read("data/LasCondes.shp")
plot(LasCondes$geometry)
plot(vegetacion_poly, pal = pal_green, add = TRUE)
# visualizamos en mapa interactivo
mview <- mapview(LasCondes, color = "#05A39B", alpha.region =0)+
viewRGB(LC, r = 4, g = 3, b = 2, na.color = "transparent") +
mapview(vegetacion_poly, na.color = "transparent", col.regions = pal_green)
mview
