pacman::p_load(sf, spdep, tmap, purrr, tidyverse)
set.seed(42)

# leemos poligonos desde archivo web
s <- readRDS(url("https://github.com/mgimond/Data/raw/gh-pages/Exercises/nhme.rds"))

# vemos nombres de las variables
names(s)

# exploramos los valores de ingresos
s$Income
hist(s$Income, main=NULL)
boxplot(s$Income, horizontal = TRUE)

# visualizamos graficamente el ingreso
tm_shape(s) + 
  tm_fill(col="Income", style="quantile", n=8, palette="Greens") +
  tm_legend(outside=TRUE)


# comparacion de datos reales con datos random
s$rand1 <- sample(s$Income, length(s$Income), replace = FALSE)


tm_shape(s) + tm_fill(col=c("Income", "rand1"),
                      style="quantile", n=8, palette="Greens", legend.show = FALSE) +
  tm_facets( nrow=1)


# generamos lista de vecinos
nb <- poly2nb(s, queen=TRUE)

# generamos pesos a partir de los vecinos
lw <- nb2listw(nb, style="W", zero.policy=TRUE)

# calculamos el indice global de moran
I <- moran(s$Income, lw, length(nb), Szero(lw))[1]
I

# calculamos el pvalue del indice
moran.test(s$Income,lw, alternative="greater")


# calculamos el moran local
lmoran <- localmoran(s$Income, lw) %>% as.data.frame()

matrix <- data.frame(value = ifelse(s$Income > mean(s$Income), "H", "L"),
                     correlation = ifelse(lmoran$Ii > mean(lmoran$Ii),"H","L"),
                     significance = lmoran$`Pr(z != E(Ii))`) %>% 
  mutate(cuadrant = ifelse(significance < 0.1,paste0(value,correlation),NA))

s$cuadrant <- matrix$cuadrant


tm_shape(s) + 
  tm_fill(col="cuadrant") +
  tm_legend(outside=TRUE)


